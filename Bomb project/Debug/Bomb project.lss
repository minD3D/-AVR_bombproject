
Bomb project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000206  00800100  0000099c  00000a30  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000099c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000040d  00800306  00800306  00000c36  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c36  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c68  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00000ca4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ac5  00000000  00000000  00000df4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b38  00000000  00000000  000028b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cf3  00000000  00000000  000033f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000434  00000000  00000000  000040e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000642  00000000  00000000  00004518  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a01  00000000  00000000  00004b5a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  0000655b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	61 c0       	rjmp	.+194    	; 0xc8 <__vector_1>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	13 e0       	ldi	r17, 0x03	; 3
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e9       	ldi	r30, 0x9C	; 156
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 30       	cpi	r26, 0x06	; 6
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	27 e0       	ldi	r18, 0x07	; 7
  b4:	a6 e0       	ldi	r26, 0x06	; 6
  b6:	b3 e0       	ldi	r27, 0x03	; 3
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a3 31       	cpi	r26, 0x13	; 19
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	9f d0       	rcall	.+318    	; 0x202 <main>
  c4:	69 c4       	rjmp	.+2258   	; 0x998 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_1>:
 char togglemode,resetbtn,stopbtn;
 int togglecnt=0;
 int cnt;
 
 SIGNAL(INT0_vect)
{
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	8f 93       	push	r24
	togglemode=~togglemode;
  d4:	80 91 0d 03 	lds	r24, 0x030D	; 0x80030d <togglemode>
  d8:	80 95       	com	r24
  da:	80 93 0d 03 	sts	0x030D, r24	; 0x80030d <togglemode>
}
  de:	8f 91       	pop	r24
  e0:	0f 90       	pop	r0
  e2:	0f be       	out	0x3f, r0	; 63
  e4:	0f 90       	pop	r0
  e6:	1f 90       	pop	r1
  e8:	18 95       	reti

000000ea <Interrupt_init>:


void Interrupt_init(void){
	EICRA = 0x02;
  ea:	82 e0       	ldi	r24, 0x02	; 2
  ec:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
	EIMSK = 0x01;
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	89 bf       	out	0x39, r24	; 57
	DDRD = 0x00;
  f4:	11 ba       	out	0x11, r1	; 17
  f6:	08 95       	ret

000000f8 <Port_init>:
}

void Port_init(void) { //포트 초기화 구문입니다.
	PORTA = 0x00; 	DDRA = 0xFF;			// PORTA 출력 LOW ,핀의 출력 설정
  f8:	1b ba       	out	0x1b, r1	; 27
  fa:	8f ef       	ldi	r24, 0xFF	; 255
  fc:	8a bb       	out	0x1a, r24	; 26
	PORTB = 0xFF; 	DDRB = 0b11111111;		// PORTB 출력 LOW ,핀의 출력 설정
  fe:	88 bb       	out	0x18, r24	; 24
 100:	87 bb       	out	0x17, r24	; 23
	PORTC = 0x00; 	DDRC = 0xF0;			// PORTC 상위 4bit 입력, 하위 4bit 출력
 102:	15 ba       	out	0x15, r1	; 21
 104:	90 ef       	ldi	r25, 0xF0	; 240
 106:	94 bb       	out	0x14, r25	; 20
	PORTD = 0x80;	DDRD = 0b10000000;		// 핀의 입출력 설정
 108:	90 e8       	ldi	r25, 0x80	; 128
 10a:	92 bb       	out	0x12, r25	; 18
 10c:	91 bb       	out	0x11, r25	; 17
	PORTE = 0x00; 	DDRE = 0xFF;			// PORTE 출력 LOW ,핀의 출력 설정
 10e:	13 b8       	out	0x03, r1	; 3
 110:	82 b9       	out	0x02, r24	; 2
	PORTF = 0x00; 	DDRF = 0x00;			// PORTF 출력 LOW ,핀의 출력 설정
 112:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 116:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 11a:	08 95       	ret

0000011c <init_devices>:


void init_devices(void)	{ // 초기화 함수를 여기에 넣습니다.
	cli(); //disable all interrupts

	Port_init();		// Port 초기화
 11c:	f8 94       	cli
 11e:	ec df       	rcall	.-40     	; 0xf8 <Port_init>
 120:	8c d0       	rcall	.+280    	; 0x23a <Adc_init>
 122:	0e d1       	rcall	.+540    	; 0x340 <lcd_init>
 124:	78 94       	sei
 126:	08 95       	ret

00000128 <screen_display>:
 128:	4b ed       	ldi	r20, 0xDB	; 219
 12a:	52 e0       	ldi	r21, 0x02	; 2
 12c:	60 e0       	ldi	r22, 0x00	; 0
 12e:	80 e0       	ldi	r24, 0x00	; 0
 130:	53 d1       	rcall	.+678    	; 0x3d8 <lcd_string>
 132:	40 ef       	ldi	r20, 0xF0	; 240
 134:	52 e0       	ldi	r21, 0x02	; 2
 136:	60 e0       	ldi	r22, 0x00	; 0
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	4e d1       	rcall	.+668    	; 0x3d8 <lcd_string>
 13c:	4b ed       	ldi	r20, 0xDB	; 219
 13e:	52 e0       	ldi	r21, 0x02	; 2
 140:	60 e0       	ldi	r22, 0x00	; 0
 142:	82 e0       	ldi	r24, 0x02	; 2
 144:	49 c1       	rjmp	.+658    	; 0x3d8 <lcd_string>
 146:	08 95       	ret

00000148 <bouble_view>:
 148:	ef 92       	push	r14
 14a:	ff 92       	push	r15
 14c:	0f 93       	push	r16
 14e:	1f 93       	push	r17
 150:	cf 93       	push	r28
 152:	d0 d1       	rcall	.+928    	; 0x4f4 <ScreenBuffer_clear>
 154:	e3 d0       	rcall	.+454    	; 0x31c <lcd_clear>
 156:	83 e0       	ldi	r24, 0x03	; 3
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	76 d0       	rcall	.+236    	; 0x248 <Read_Adc_Data>
 15c:	6e e0       	ldi	r22, 0x0E	; 14
 15e:	70 e0       	ldi	r23, 0x00	; 0
 160:	08 d4       	rcall	.+2064   	; 0x972 <__divmodhi4>
 162:	70 93 09 03 	sts	0x0309, r23	; 0x800309 <Data_ADC3+0x1>
 166:	60 93 08 03 	sts	0x0308, r22	; 0x800308 <Data_ADC3>
 16a:	84 e0       	ldi	r24, 0x04	; 4
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	6c d0       	rcall	.+216    	; 0x248 <Read_Adc_Data>
 170:	99 23       	and	r25, r25
 172:	0c f4       	brge	.+2      	; 0x176 <bouble_view+0x2e>
 174:	07 96       	adiw	r24, 0x07	; 7
 176:	bc 01       	movw	r22, r24
 178:	75 95       	asr	r23
 17a:	67 95       	ror	r22
 17c:	75 95       	asr	r23
 17e:	67 95       	ror	r22
 180:	75 95       	asr	r23
 182:	67 95       	ror	r22
 184:	60 93 06 03 	sts	0x0306, r22	; 0x800306 <__data_end>
 188:	70 93 07 03 	sts	0x0307, r23	; 0x800307 <__data_end+0x1>
 18c:	45 e0       	ldi	r20, 0x05	; 5
 18e:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <Data_ADC3>
 192:	c2 d1       	rcall	.+900    	; 0x518 <GLCD_Circle>
 194:	c0 e0       	ldi	r28, 0x00	; 0
 196:	0f 2e       	mov	r0, r31
 198:	f6 e0       	ldi	r31, 0x06	; 6
 19a:	ef 2e       	mov	r14, r31
 19c:	f3 e0       	ldi	r31, 0x03	; 3
 19e:	ff 2e       	mov	r15, r31
 1a0:	f0 2d       	mov	r31, r0
 1a2:	08 e0       	ldi	r16, 0x08	; 8
 1a4:	13 e0       	ldi	r17, 0x03	; 3
 1a6:	f7 01       	movw	r30, r14
 1a8:	60 81       	ld	r22, Z
 1aa:	6c 0f       	add	r22, r28
 1ac:	f8 01       	movw	r30, r16
 1ae:	80 81       	ld	r24, Z
 1b0:	3f d1       	rcall	.+638    	; 0x430 <GLCD_Dot>
 1b2:	f8 01       	movw	r30, r16
 1b4:	80 81       	ld	r24, Z
 1b6:	f7 01       	movw	r30, r14
 1b8:	60 81       	ld	r22, Z
 1ba:	8c 0f       	add	r24, r28
 1bc:	39 d1       	rcall	.+626    	; 0x430 <GLCD_Dot>
 1be:	f7 01       	movw	r30, r14
 1c0:	60 81       	ld	r22, Z
 1c2:	6c 1b       	sub	r22, r28
 1c4:	f8 01       	movw	r30, r16
 1c6:	80 81       	ld	r24, Z
 1c8:	33 d1       	rcall	.+614    	; 0x430 <GLCD_Dot>
 1ca:	f8 01       	movw	r30, r16
 1cc:	80 81       	ld	r24, Z
 1ce:	f7 01       	movw	r30, r14
 1d0:	60 81       	ld	r22, Z
 1d2:	8c 1b       	sub	r24, r28
 1d4:	2d d1       	rcall	.+602    	; 0x430 <GLCD_Dot>
 1d6:	cf 5f       	subi	r28, 0xFF	; 255
 1d8:	c7 30       	cpi	r28, 0x07	; 7
 1da:	29 f7       	brne	.-54     	; 0x1a6 <bouble_view+0x5e>
 1dc:	cf 91       	pop	r28
 1de:	1f 91       	pop	r17
 1e0:	0f 91       	pop	r16
 1e2:	ff 90       	pop	r15
 1e4:	ef 90       	pop	r14
 1e6:	08 95       	ret

000001e8 <makeCircle>:
 1e8:	48 e0       	ldi	r20, 0x08	; 8
 1ea:	68 e0       	ldi	r22, 0x08	; 8
 1ec:	88 e0       	ldi	r24, 0x08	; 8
 1ee:	94 d1       	rcall	.+808    	; 0x518 <GLCD_Circle>
 1f0:	48 e0       	ldi	r20, 0x08	; 8
 1f2:	61 e0       	ldi	r22, 0x01	; 1
 1f4:	8a e0       	ldi	r24, 0x0A	; 10
 1f6:	90 d1       	rcall	.+800    	; 0x518 <GLCD_Circle>
 1f8:	48 e0       	ldi	r20, 0x08	; 8
 1fa:	68 e0       	ldi	r22, 0x08	; 8
 1fc:	84 e0       	ldi	r24, 0x04	; 4
 1fe:	8c c1       	rjmp	.+792    	; 0x518 <GLCD_Circle>
 200:	08 95       	ret

00000202 <main>:
 202:	8c df       	rcall	.-232    	; 0x11c <init_devices>
 204:	91 df       	rcall	.-222    	; 0x128 <screen_display>
 206:	71 df       	rcall	.-286    	; 0xea <Interrupt_init>
 208:	8f ef       	ldi	r24, 0xFF	; 255
 20a:	87 bb       	out	0x17, r24	; 23
 20c:	8f e0       	ldi	r24, 0x0F	; 15
 20e:	88 bb       	out	0x18, r24	; 24
 210:	10 92 0d 03 	sts	0x030D, r1	; 0x80030d <togglemode>
 214:	85 e0       	ldi	r24, 0x05	; 5
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <Data_ADC3+0x1>
 21c:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <Data_ADC3>
 220:	90 93 07 03 	sts	0x0307, r25	; 0x800307 <__data_end+0x1>
 224:	80 93 06 03 	sts	0x0306, r24	; 0x800306 <__data_end>
 228:	80 91 0d 03 	lds	r24, 0x030D	; 0x80030d <togglemode>
 22c:	88 23       	and	r24, r24
 22e:	19 f0       	breq	.+6      	; 0x236 <main+0x34>
 230:	8b df       	rcall	.-234    	; 0x148 <bouble_view>
 232:	da df       	rcall	.-76     	; 0x1e8 <makeCircle>
 234:	f9 cf       	rjmp	.-14     	; 0x228 <main+0x26>
 236:	78 df       	rcall	.-272    	; 0x128 <screen_display>
 238:	f7 cf       	rjmp	.-18     	; 0x228 <main+0x26>

0000023a <Adc_init>:
#define ADC_2_56_TYPE 0xC0      // A/D 컨버터 사용 기준 전압  2.56 설정

//ADC initialize
void Adc_init(void)
{
	ADCSRA = 0x00;	// disable adc
 23a:	16 b8       	out	0x06, r1	; 6
	ADMUX  = 0x00; 	// select adc input 0
 23c:	17 b8       	out	0x07, r1	; 7
	ACSR   = 0x80;	//
 23e:	80 e8       	ldi	r24, 0x80	; 128
 240:	88 b9       	out	0x08, r24	; 8
	ADCSRA = 0xC3;	// Conversion time: 6uS
 242:	83 ec       	ldi	r24, 0xC3	; 195
 244:	86 b9       	out	0x06, r24	; 6
 246:	08 95       	ret

00000248 <Read_Adc_Data>:
}
unsigned int Read_Adc_Data(unsigned char adc_input)   // ADC  읽어 들이기
{	unsigned int adc = 0;
	ADCSRA = 0xC3;    // Conversion time: 6uS
 248:	93 ec       	ldi	r25, 0xC3	; 195
 24a:	96 b9       	out	0x06, r25	; 6
	//CLI();
	ADMUX = adc_input | ADC_AVCC_TYPE ;      // adc  사용 핀 설정
 24c:	80 64       	ori	r24, 0x40	; 64
 24e:	87 b9       	out	0x07, r24	; 7
	//ADMUX.3 = 1;
	ADCSRA |= 0x40;                            // Wait for the AD conversion to complete
 250:	36 9a       	sbi	0x06, 6	; 6
	while((ADCSRA & 0x10) != 0x10);
 252:	34 9b       	sbis	0x06, 4	; 6
 254:	fe cf       	rjmp	.-4      	; 0x252 <Read_Adc_Data+0xa>
	adc += ADCL + ( ADCH * 256 );
 256:	24 b1       	in	r18, 0x04	; 4
 258:	85 b1       	in	r24, 0x05	; 5
	//SEI();
	ADCSRA = 0x00;
 25a:	16 b8       	out	0x06, r1	; 6
	return adc;
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	98 2f       	mov	r25, r24
 260:	88 27       	eor	r24, r24
}
 262:	82 0f       	add	r24, r18
 264:	91 1d       	adc	r25, r1
 266:	08 95       	ret

00000268 <cmndl>:
		for(x = x1; x <= x2; x++) {
			for(y = y1; y <= y2; y++) {
				GLCD_Dot(x,y);
			}
		}
	}
 268:	1d 9a       	sbi	0x03, 5	; 3
 26a:	91 e3       	ldi	r25, 0x31	; 49
 26c:	9a 95       	dec	r25
 26e:	f1 f7       	brne	.-4      	; 0x26c <cmndl+0x4>
 270:	00 00       	nop
 272:	1c 98       	cbi	0x03, 4	; 3
 274:	1e 98       	cbi	0x03, 6	; 3
 276:	1f 9a       	sbi	0x03, 7	; 3
 278:	8b bb       	out	0x1b, r24	; 27
 27a:	81 e3       	ldi	r24, 0x31	; 49
 27c:	8a 95       	dec	r24
 27e:	f1 f7       	brne	.-4      	; 0x27c <cmndl+0x14>
 280:	00 00       	nop
 282:	1d 98       	cbi	0x03, 5	; 3
 284:	08 95       	ret

00000286 <cmndr>:
 286:	1d 9a       	sbi	0x03, 5	; 3
 288:	91 e3       	ldi	r25, 0x31	; 49
 28a:	9a 95       	dec	r25
 28c:	f1 f7       	brne	.-4      	; 0x28a <cmndr+0x4>
 28e:	00 00       	nop
 290:	1c 98       	cbi	0x03, 4	; 3
 292:	1e 9a       	sbi	0x03, 6	; 3
 294:	1f 98       	cbi	0x03, 7	; 3
 296:	8b bb       	out	0x1b, r24	; 27
 298:	81 e3       	ldi	r24, 0x31	; 49
 29a:	8a 95       	dec	r24
 29c:	f1 f7       	brne	.-4      	; 0x29a <cmndr+0x14>
 29e:	00 00       	nop
 2a0:	1d 98       	cbi	0x03, 5	; 3
 2a2:	08 95       	ret

000002a4 <cmnda>:
 2a4:	1d 9a       	sbi	0x03, 5	; 3
 2a6:	91 e3       	ldi	r25, 0x31	; 49
 2a8:	9a 95       	dec	r25
 2aa:	f1 f7       	brne	.-4      	; 0x2a8 <cmnda+0x4>
 2ac:	00 00       	nop
 2ae:	1c 98       	cbi	0x03, 4	; 3
 2b0:	1e 9a       	sbi	0x03, 6	; 3
 2b2:	1f 9a       	sbi	0x03, 7	; 3
 2b4:	8b bb       	out	0x1b, r24	; 27
 2b6:	81 e3       	ldi	r24, 0x31	; 49
 2b8:	8a 95       	dec	r24
 2ba:	f1 f7       	brne	.-4      	; 0x2b8 <cmnda+0x14>
 2bc:	00 00       	nop
 2be:	1d 98       	cbi	0x03, 5	; 3
 2c0:	08 95       	ret

000002c2 <datal>:
 2c2:	1d 9a       	sbi	0x03, 5	; 3
 2c4:	91 e3       	ldi	r25, 0x31	; 49
 2c6:	9a 95       	dec	r25
 2c8:	f1 f7       	brne	.-4      	; 0x2c6 <datal+0x4>
 2ca:	00 00       	nop
 2cc:	1c 9a       	sbi	0x03, 4	; 3
 2ce:	1e 98       	cbi	0x03, 6	; 3
 2d0:	1f 9a       	sbi	0x03, 7	; 3
 2d2:	8b bb       	out	0x1b, r24	; 27
 2d4:	81 e3       	ldi	r24, 0x31	; 49
 2d6:	8a 95       	dec	r24
 2d8:	f1 f7       	brne	.-4      	; 0x2d6 <datal+0x14>
 2da:	00 00       	nop
 2dc:	1d 98       	cbi	0x03, 5	; 3
 2de:	08 95       	ret

000002e0 <datar>:
 2e0:	1d 9a       	sbi	0x03, 5	; 3
 2e2:	91 e3       	ldi	r25, 0x31	; 49
 2e4:	9a 95       	dec	r25
 2e6:	f1 f7       	brne	.-4      	; 0x2e4 <datar+0x4>
 2e8:	00 00       	nop
 2ea:	1c 9a       	sbi	0x03, 4	; 3
 2ec:	1e 9a       	sbi	0x03, 6	; 3
 2ee:	1f 98       	cbi	0x03, 7	; 3
 2f0:	8b bb       	out	0x1b, r24	; 27
 2f2:	81 e3       	ldi	r24, 0x31	; 49
 2f4:	8a 95       	dec	r24
 2f6:	f1 f7       	brne	.-4      	; 0x2f4 <datar+0x14>
 2f8:	00 00       	nop
 2fa:	1d 98       	cbi	0x03, 5	; 3
 2fc:	08 95       	ret

000002fe <dataa>:
 2fe:	1d 9a       	sbi	0x03, 5	; 3
 300:	91 e3       	ldi	r25, 0x31	; 49
 302:	9a 95       	dec	r25
 304:	f1 f7       	brne	.-4      	; 0x302 <dataa+0x4>
 306:	00 00       	nop
 308:	1c 9a       	sbi	0x03, 4	; 3
 30a:	1e 9a       	sbi	0x03, 6	; 3
 30c:	1f 9a       	sbi	0x03, 7	; 3
 30e:	8b bb       	out	0x1b, r24	; 27
 310:	81 e3       	ldi	r24, 0x31	; 49
 312:	8a 95       	dec	r24
 314:	f1 f7       	brne	.-4      	; 0x312 <dataa+0x14>
 316:	00 00       	nop
 318:	1d 98       	cbi	0x03, 5	; 3
 31a:	08 95       	ret

0000031c <lcd_clear>:
 31c:	cf 93       	push	r28
 31e:	df 93       	push	r29
 320:	d8 eb       	ldi	r29, 0xB8	; 184
 322:	8d 2f       	mov	r24, r29
 324:	bf df       	rcall	.-130    	; 0x2a4 <cmnda>
 326:	80 e4       	ldi	r24, 0x40	; 64
 328:	bd df       	rcall	.-134    	; 0x2a4 <cmnda>
 32a:	c0 e4       	ldi	r28, 0x40	; 64
 32c:	80 e0       	ldi	r24, 0x00	; 0
 32e:	e7 df       	rcall	.-50     	; 0x2fe <dataa>
 330:	c1 50       	subi	r28, 0x01	; 1
 332:	e1 f7       	brne	.-8      	; 0x32c <lcd_clear+0x10>
 334:	df 5f       	subi	r29, 0xFF	; 255
 336:	d0 3c       	cpi	r29, 0xC0	; 192
 338:	a1 f7       	brne	.-24     	; 0x322 <lcd_clear+0x6>
 33a:	df 91       	pop	r29
 33c:	cf 91       	pop	r28
 33e:	08 95       	ret

00000340 <lcd_init>:
 340:	8f e3       	ldi	r24, 0x3F	; 63
 342:	b0 df       	rcall	.-160    	; 0x2a4 <cmnda>
 344:	80 ec       	ldi	r24, 0xC0	; 192
 346:	ae df       	rcall	.-164    	; 0x2a4 <cmnda>
 348:	88 eb       	ldi	r24, 0xB8	; 184
 34a:	ac df       	rcall	.-168    	; 0x2a4 <cmnda>
 34c:	80 e4       	ldi	r24, 0x40	; 64
 34e:	aa cf       	rjmp	.-172    	; 0x2a4 <cmnda>
 350:	08 95       	ret

00000352 <lcd_xy>:
 352:	80 93 0f 03 	sts	0x030F, r24	; 0x80030f <xchar>
 356:	60 93 12 07 	sts	0x0712, r22	; 0x800712 <ychar>
 35a:	88 54       	subi	r24, 0x48	; 72
 35c:	a3 df       	rcall	.-186    	; 0x2a4 <cmnda>
 35e:	80 91 12 07 	lds	r24, 0x0712	; 0x800712 <ychar>
 362:	8a 30       	cpi	r24, 0x0A	; 10
 364:	38 f4       	brcc	.+14     	; 0x374 <lcd_xy+0x22>
 366:	98 2f       	mov	r25, r24
 368:	99 0f       	add	r25, r25
 36a:	89 0f       	add	r24, r25
 36c:	88 0f       	add	r24, r24
 36e:	8c 5b       	subi	r24, 0xBC	; 188
 370:	7b cf       	rjmp	.-266    	; 0x268 <cmndl>
 372:	08 95       	ret
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	0a 97       	sbiw	r24, 0x0a	; 10
 378:	98 2f       	mov	r25, r24
 37a:	99 0f       	add	r25, r25
 37c:	89 0f       	add	r24, r25
 37e:	88 0f       	add	r24, r24
 380:	80 5c       	subi	r24, 0xC0	; 192
 382:	81 cf       	rjmp	.-254    	; 0x286 <cmndr>
 384:	08 95       	ret

00000386 <lcd_char>:
 386:	1f 93       	push	r17
 388:	cf 93       	push	r28
 38a:	df 93       	push	r29
 38c:	90 e0       	ldi	r25, 0x00	; 0
 38e:	ec 01       	movw	r28, r24
 390:	cc 0f       	add	r28, r28
 392:	dd 1f       	adc	r29, r29
 394:	cc 0f       	add	r28, r28
 396:	dd 1f       	adc	r29, r29
 398:	8c 0f       	add	r24, r28
 39a:	9d 1f       	adc	r25, r29
 39c:	ec 01       	movw	r28, r24
 39e:	c0 5a       	subi	r28, 0xA0	; 160
 3a0:	df 4f       	sbci	r29, 0xFF	; 255
 3a2:	15 e0       	ldi	r17, 0x05	; 5
 3a4:	80 91 12 07 	lds	r24, 0x0712	; 0x800712 <ychar>
 3a8:	8a 30       	cpi	r24, 0x0A	; 10
 3aa:	18 f4       	brcc	.+6      	; 0x3b2 <lcd_char+0x2c>
 3ac:	88 81       	ld	r24, Y
 3ae:	89 df       	rcall	.-238    	; 0x2c2 <datal>
 3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <lcd_char+0x30>
 3b2:	88 81       	ld	r24, Y
 3b4:	95 df       	rcall	.-214    	; 0x2e0 <datar>
 3b6:	11 50       	subi	r17, 0x01	; 1
 3b8:	21 96       	adiw	r28, 0x01	; 1
 3ba:	11 11       	cpse	r17, r1
 3bc:	f3 cf       	rjmp	.-26     	; 0x3a4 <lcd_char+0x1e>
 3be:	80 91 12 07 	lds	r24, 0x0712	; 0x800712 <ychar>
 3c2:	8a 30       	cpi	r24, 0x0A	; 10
 3c4:	18 f4       	brcc	.+6      	; 0x3cc <lcd_char+0x46>
 3c6:	80 e0       	ldi	r24, 0x00	; 0
 3c8:	7c df       	rcall	.-264    	; 0x2c2 <datal>
 3ca:	02 c0       	rjmp	.+4      	; 0x3d0 <lcd_char+0x4a>
 3cc:	80 e0       	ldi	r24, 0x00	; 0
 3ce:	88 df       	rcall	.-240    	; 0x2e0 <datar>
 3d0:	df 91       	pop	r29
 3d2:	cf 91       	pop	r28
 3d4:	1f 91       	pop	r17
 3d6:	08 95       	ret

000003d8 <lcd_string>:
 3d8:	cf 93       	push	r28
 3da:	df 93       	push	r29
 3dc:	ea 01       	movw	r28, r20
 3de:	80 93 0f 03 	sts	0x030F, r24	; 0x80030f <xchar>
 3e2:	60 93 12 07 	sts	0x0712, r22	; 0x800712 <ychar>
 3e6:	b5 df       	rcall	.-150    	; 0x352 <lcd_xy>
 3e8:	88 81       	ld	r24, Y
 3ea:	88 23       	and	r24, r24
 3ec:	81 f0       	breq	.+32     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3ee:	80 91 12 07 	lds	r24, 0x0712	; 0x800712 <ychar>
 3f2:	8a 30       	cpi	r24, 0x0A	; 10
 3f4:	11 f4       	brne	.+4      	; 0x3fa <lcd_string+0x22>
 3f6:	80 e4       	ldi	r24, 0x40	; 64
 3f8:	46 df       	rcall	.-372    	; 0x286 <cmndr>
 3fa:	89 91       	ld	r24, Y+
 3fc:	c4 df       	rcall	.-120    	; 0x386 <lcd_char>
 3fe:	80 91 12 07 	lds	r24, 0x0712	; 0x800712 <ychar>
 402:	8f 5f       	subi	r24, 0xFF	; 255
 404:	80 93 12 07 	sts	0x0712, r24	; 0x800712 <ychar>
 408:	88 81       	ld	r24, Y
 40a:	81 11       	cpse	r24, r1
 40c:	f0 cf       	rjmp	.-32     	; 0x3ee <lcd_string+0x16>
 40e:	df 91       	pop	r29
 410:	cf 91       	pop	r28
 412:	08 95       	ret

00000414 <GLCD_Axis_xy>:
 414:	cf 93       	push	r28
 416:	c6 2f       	mov	r28, r22
 418:	88 54       	subi	r24, 0x48	; 72
 41a:	44 df       	rcall	.-376    	; 0x2a4 <cmnda>
 41c:	c0 34       	cpi	r28, 0x40	; 64
 41e:	20 f4       	brcc	.+8      	; 0x428 <GLCD_Axis_xy+0x14>
 420:	80 e4       	ldi	r24, 0x40	; 64
 422:	8c 0f       	add	r24, r28
 424:	21 df       	rcall	.-446    	; 0x268 <cmndl>
 426:	02 c0       	rjmp	.+4      	; 0x42c <GLCD_Axis_xy+0x18>
 428:	8c 2f       	mov	r24, r28
 42a:	2d df       	rcall	.-422    	; 0x286 <cmndr>
 42c:	cf 91       	pop	r28
 42e:	08 95       	ret

00000430 <GLCD_Dot>:
 430:	ef 92       	push	r14
 432:	ff 92       	push	r15
 434:	0f 93       	push	r16
 436:	1f 93       	push	r17
 438:	cf 93       	push	r28
 43a:	80 34       	cpi	r24, 0x40	; 64
 43c:	08 f0       	brcs	.+2      	; 0x440 <GLCD_Dot+0x10>
 43e:	54 c0       	rjmp	.+168    	; 0x4e8 <GLCD_Dot+0xb8>
 440:	66 23       	and	r22, r22
 442:	0c f4       	brge	.+2      	; 0x446 <GLCD_Dot+0x16>
 444:	51 c0       	rjmp	.+162    	; 0x4e8 <GLCD_Dot+0xb8>
 446:	28 2f       	mov	r18, r24
 448:	26 95       	lsr	r18
 44a:	26 95       	lsr	r18
 44c:	26 95       	lsr	r18
 44e:	98 2f       	mov	r25, r24
 450:	97 70       	andi	r25, 0x07	; 7
 452:	71 f0       	breq	.+28     	; 0x470 <GLCD_Dot+0x40>
 454:	91 30       	cpi	r25, 0x01	; 1
 456:	71 f0       	breq	.+28     	; 0x474 <GLCD_Dot+0x44>
 458:	92 30       	cpi	r25, 0x02	; 2
 45a:	71 f0       	breq	.+28     	; 0x478 <GLCD_Dot+0x48>
 45c:	93 30       	cpi	r25, 0x03	; 3
 45e:	71 f0       	breq	.+28     	; 0x47c <GLCD_Dot+0x4c>
 460:	94 30       	cpi	r25, 0x04	; 4
 462:	71 f0       	breq	.+28     	; 0x480 <GLCD_Dot+0x50>
 464:	95 30       	cpi	r25, 0x05	; 5
 466:	71 f0       	breq	.+28     	; 0x484 <GLCD_Dot+0x54>
 468:	96 30       	cpi	r25, 0x06	; 6
 46a:	71 f0       	breq	.+28     	; 0x488 <GLCD_Dot+0x58>
 46c:	90 e8       	ldi	r25, 0x80	; 128
 46e:	0d c0       	rjmp	.+26     	; 0x48a <GLCD_Dot+0x5a>
 470:	91 e0       	ldi	r25, 0x01	; 1
 472:	0b c0       	rjmp	.+22     	; 0x48a <GLCD_Dot+0x5a>
 474:	92 e0       	ldi	r25, 0x02	; 2
 476:	09 c0       	rjmp	.+18     	; 0x48a <GLCD_Dot+0x5a>
 478:	94 e0       	ldi	r25, 0x04	; 4
 47a:	07 c0       	rjmp	.+14     	; 0x48a <GLCD_Dot+0x5a>
 47c:	98 e0       	ldi	r25, 0x08	; 8
 47e:	05 c0       	rjmp	.+10     	; 0x48a <GLCD_Dot+0x5a>
 480:	90 e1       	ldi	r25, 0x10	; 16
 482:	03 c0       	rjmp	.+6      	; 0x48a <GLCD_Dot+0x5a>
 484:	90 e2       	ldi	r25, 0x20	; 32
 486:	01 c0       	rjmp	.+2      	; 0x48a <GLCD_Dot+0x5a>
 488:	90 e4       	ldi	r25, 0x40	; 64
 48a:	c6 2f       	mov	r28, r22
 48c:	02 2f       	mov	r16, r18
 48e:	10 e0       	ldi	r17, 0x00	; 0
 490:	e6 2e       	mov	r14, r22
 492:	f1 2c       	mov	r15, r1
 494:	f8 01       	movw	r30, r16
 496:	f6 95       	lsr	r31
 498:	fe 2f       	mov	r31, r30
 49a:	ee 27       	eor	r30, r30
 49c:	f7 95       	ror	r31
 49e:	e7 95       	ror	r30
 4a0:	ee 5e       	subi	r30, 0xEE	; 238
 4a2:	fc 4f       	sbci	r31, 0xFC	; 252
 4a4:	ee 0d       	add	r30, r14
 4a6:	ff 1d       	adc	r31, r15
 4a8:	80 81       	ld	r24, Z
 4aa:	98 2b       	or	r25, r24
 4ac:	90 83       	st	Z, r25
 4ae:	82 2f       	mov	r24, r18
 4b0:	b1 df       	rcall	.-158    	; 0x414 <GLCD_Axis_xy>
 4b2:	c0 34       	cpi	r28, 0x40	; 64
 4b4:	68 f4       	brcc	.+26     	; 0x4d0 <GLCD_Dot+0xa0>
 4b6:	16 95       	lsr	r17
 4b8:	10 2f       	mov	r17, r16
 4ba:	00 27       	eor	r16, r16
 4bc:	17 95       	ror	r17
 4be:	07 95       	ror	r16
 4c0:	0e 5e       	subi	r16, 0xEE	; 238
 4c2:	1c 4f       	sbci	r17, 0xFC	; 252
 4c4:	f8 01       	movw	r30, r16
 4c6:	ee 0d       	add	r30, r14
 4c8:	ff 1d       	adc	r31, r15
 4ca:	80 81       	ld	r24, Z
 4cc:	fa de       	rcall	.-524    	; 0x2c2 <datal>
 4ce:	0c c0       	rjmp	.+24     	; 0x4e8 <GLCD_Dot+0xb8>
 4d0:	16 95       	lsr	r17
 4d2:	10 2f       	mov	r17, r16
 4d4:	00 27       	eor	r16, r16
 4d6:	17 95       	ror	r17
 4d8:	07 95       	ror	r16
 4da:	0e 5e       	subi	r16, 0xEE	; 238
 4dc:	1c 4f       	sbci	r17, 0xFC	; 252
 4de:	f8 01       	movw	r30, r16
 4e0:	ee 0d       	add	r30, r14
 4e2:	ff 1d       	adc	r31, r15
 4e4:	80 81       	ld	r24, Z
 4e6:	fc de       	rcall	.-520    	; 0x2e0 <datar>
 4e8:	cf 91       	pop	r28
 4ea:	1f 91       	pop	r17
 4ec:	0f 91       	pop	r16
 4ee:	ff 90       	pop	r15
 4f0:	ef 90       	pop	r14
 4f2:	08 95       	ret

000004f4 <ScreenBuffer_clear>:
 4f4:	e2 e1       	ldi	r30, 0x12	; 18
 4f6:	f3 e0       	ldi	r31, 0x03	; 3
 4f8:	22 e1       	ldi	r18, 0x12	; 18
 4fa:	37 e0       	ldi	r19, 0x07	; 7
 4fc:	08 c0       	rjmp	.+16     	; 0x50e <ScreenBuffer_clear+0x1a>
 4fe:	11 92       	st	Z+, r1
 500:	e8 17       	cp	r30, r24
 502:	f9 07       	cpc	r31, r25
 504:	e1 f7       	brne	.-8      	; 0x4fe <ScreenBuffer_clear+0xa>
 506:	fc 01       	movw	r30, r24
 508:	82 17       	cp	r24, r18
 50a:	93 07       	cpc	r25, r19
 50c:	21 f0       	breq	.+8      	; 0x516 <ScreenBuffer_clear+0x22>
 50e:	cf 01       	movw	r24, r30
 510:	80 58       	subi	r24, 0x80	; 128
 512:	9f 4f       	sbci	r25, 0xFF	; 255
 514:	f4 cf       	rjmp	.-24     	; 0x4fe <ScreenBuffer_clear+0xa>
 516:	08 95       	ret

00000518 <GLCD_Circle>:

	// draw a circle
	// 원을 그립니다.
	void GLCD_Circle(unsigned char x1,unsigned char y1,unsigned char r)
	{
 518:	2f 92       	push	r2
 51a:	3f 92       	push	r3
 51c:	4f 92       	push	r4
 51e:	5f 92       	push	r5
 520:	6f 92       	push	r6
 522:	7f 92       	push	r7
 524:	8f 92       	push	r8
 526:	9f 92       	push	r9
 528:	af 92       	push	r10
 52a:	bf 92       	push	r11
 52c:	cf 92       	push	r12
 52e:	df 92       	push	r13
 530:	ef 92       	push	r14
 532:	ff 92       	push	r15
 534:	0f 93       	push	r16
 536:	1f 93       	push	r17
 538:	cf 93       	push	r28
 53a:	df 93       	push	r29
 53c:	38 2e       	mov	r3, r24
 53e:	26 2e       	mov	r2, r22
		int x, y;
		float s;
		for(y = y1 - r*3/4; y <= y1 + r*3/4; y++) // draw with y variable
 540:	06 2f       	mov	r16, r22
 542:	10 e0       	ldi	r17, 0x00	; 0
 544:	64 2e       	mov	r6, r20
 546:	71 2c       	mov	r7, r1
 548:	23 01       	movw	r4, r6
 54a:	44 0c       	add	r4, r4
 54c:	55 1c       	adc	r5, r5
 54e:	46 0c       	add	r4, r6
 550:	57 1c       	adc	r5, r7
 552:	55 94       	asr	r5
 554:	47 94       	ror	r4
 556:	55 94       	asr	r5
 558:	47 94       	ror	r4
 55a:	e8 01       	movw	r28, r16
 55c:	c4 19       	sub	r28, r4
 55e:	d5 09       	sbc	r29, r5
 560:	04 0d       	add	r16, r4
 562:	15 1d       	adc	r17, r5
 564:	0c 17       	cp	r16, r28
 566:	1d 07       	cpc	r17, r29
 568:	7c f1       	brlt	.+94     	; 0x5c8 <GLCD_Circle+0xb0>
		{
			s = sqrt(r*r - (y-y1)*(y-y1)) + 0.5;
 56a:	66 9c       	mul	r6, r6
 56c:	60 01       	movw	r12, r0
 56e:	67 9c       	mul	r6, r7
 570:	d0 0c       	add	r13, r0
 572:	d0 0c       	add	r13, r0
 574:	11 24       	eor	r1, r1
 576:	e6 2e       	mov	r14, r22
 578:	f1 2c       	mov	r15, r1
 57a:	ce 01       	movw	r24, r28
 57c:	8e 19       	sub	r24, r14
 57e:	9f 09       	sbc	r25, r15
 580:	88 9f       	mul	r24, r24
 582:	90 01       	movw	r18, r0
 584:	89 9f       	mul	r24, r25
 586:	30 0d       	add	r19, r0
 588:	30 0d       	add	r19, r0
 58a:	11 24       	eor	r1, r1
 58c:	46 01       	movw	r8, r12
 58e:	82 1a       	sub	r8, r18
 590:	93 0a       	sbc	r9, r19
 592:	09 2c       	mov	r0, r9
 594:	00 0c       	add	r0, r0
 596:	aa 08       	sbc	r10, r10
 598:	bb 08       	sbc	r11, r11
 59a:	c5 01       	movw	r24, r10
 59c:	b4 01       	movw	r22, r8
 59e:	f2 d0       	rcall	.+484    	; 0x784 <__floatsisf>
 5a0:	81 d1       	rcall	.+770    	; 0x8a4 <sqrt>
			x = x1 + (unsigned char)s;
 5a2:	20 e0       	ldi	r18, 0x00	; 0
 5a4:	30 e0       	ldi	r19, 0x00	; 0
 5a6:	40 e0       	ldi	r20, 0x00	; 0
 5a8:	5f e3       	ldi	r21, 0x3F	; 63
 5aa:	5a d0       	rcall	.+180    	; 0x660 <__addsf3>
 5ac:	bd d0       	rcall	.+378    	; 0x728 <__fixunssfsi>
			GLCD_Dot(x,y);
 5ae:	b6 2e       	mov	r11, r22
 5b0:	6c 2f       	mov	r22, r28
 5b2:	83 2d       	mov	r24, r3
 5b4:	8b 0d       	add	r24, r11
			x = x1 - (unsigned char)s;
			GLCD_Dot(x,y);
 5b6:	3c df       	rcall	.-392    	; 0x430 <GLCD_Dot>
 5b8:	6c 2f       	mov	r22, r28
 5ba:	83 2d       	mov	r24, r3
 5bc:	8b 19       	sub	r24, r11
 5be:	38 df       	rcall	.-400    	; 0x430 <GLCD_Dot>
	// 원을 그립니다.
	void GLCD_Circle(unsigned char x1,unsigned char y1,unsigned char r)
	{
		int x, y;
		float s;
		for(y = y1 - r*3/4; y <= y1 + r*3/4; y++) // draw with y variable
 5c0:	21 96       	adiw	r28, 0x01	; 1
 5c2:	0c 17       	cp	r16, r28
 5c4:	1d 07       	cpc	r17, r29
 5c6:	cc f6       	brge	.-78     	; 0x57a <GLCD_Circle+0x62>
			x = x1 + (unsigned char)s;
			GLCD_Dot(x,y);
			x = x1 - (unsigned char)s;
			GLCD_Dot(x,y);
		}
		for(x = x1 - r*3/4; x <= x1 + r*3/4; x++) // draw with x variable
 5c8:	83 2d       	mov	r24, r3
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	ec 01       	movw	r28, r24
 5ce:	c4 19       	sub	r28, r4
 5d0:	d5 09       	sbc	r29, r5
 5d2:	48 0e       	add	r4, r24
 5d4:	59 1e       	adc	r5, r25
 5d6:	4c 16       	cp	r4, r28
 5d8:	5d 06       	cpc	r5, r29
 5da:	74 f1       	brlt	.+92     	; 0x638 <GLCD_Circle+0x120>
		{
			s = sqrt(r*r - (x-x1)*(x-x1)) + 0.5;
 5dc:	66 9c       	mul	r6, r6
 5de:	80 01       	movw	r16, r0
 5e0:	67 9c       	mul	r6, r7
 5e2:	10 0d       	add	r17, r0
 5e4:	10 0d       	add	r17, r0
 5e6:	11 24       	eor	r1, r1
 5e8:	7c 01       	movw	r14, r24
 5ea:	ce 01       	movw	r24, r28
 5ec:	8e 19       	sub	r24, r14
 5ee:	9f 09       	sbc	r25, r15
 5f0:	88 9f       	mul	r24, r24
 5f2:	90 01       	movw	r18, r0
 5f4:	89 9f       	mul	r24, r25
 5f6:	30 0d       	add	r19, r0
 5f8:	30 0d       	add	r19, r0
 5fa:	11 24       	eor	r1, r1
 5fc:	48 01       	movw	r8, r16
 5fe:	82 1a       	sub	r8, r18
 600:	93 0a       	sbc	r9, r19
 602:	09 2c       	mov	r0, r9
 604:	00 0c       	add	r0, r0
 606:	aa 08       	sbc	r10, r10
 608:	bb 08       	sbc	r11, r11
 60a:	c5 01       	movw	r24, r10
 60c:	b4 01       	movw	r22, r8
			y = y1 + (unsigned char)s;
 60e:	ba d0       	rcall	.+372    	; 0x784 <__floatsisf>
 610:	49 d1       	rcall	.+658    	; 0x8a4 <sqrt>
 612:	20 e0       	ldi	r18, 0x00	; 0
 614:	30 e0       	ldi	r19, 0x00	; 0
 616:	40 e0       	ldi	r20, 0x00	; 0
 618:	5f e3       	ldi	r21, 0x3F	; 63
 61a:	22 d0       	rcall	.+68     	; 0x660 <__addsf3>
			GLCD_Dot(x,y);
 61c:	85 d0       	rcall	.+266    	; 0x728 <__fixunssfsi>
 61e:	d6 2e       	mov	r13, r22
 620:	62 2d       	mov	r22, r2
 622:	6d 0d       	add	r22, r13
 624:	8c 2f       	mov	r24, r28
			y = y1 - (unsigned char)s;
			GLCD_Dot(x,y);
 626:	04 df       	rcall	.-504    	; 0x430 <GLCD_Dot>
 628:	62 2d       	mov	r22, r2
 62a:	6d 19       	sub	r22, r13
 62c:	8c 2f       	mov	r24, r28
 62e:	00 df       	rcall	.-512    	; 0x430 <GLCD_Dot>
			x = x1 + (unsigned char)s;
			GLCD_Dot(x,y);
			x = x1 - (unsigned char)s;
			GLCD_Dot(x,y);
		}
		for(x = x1 - r*3/4; x <= x1 + r*3/4; x++) // draw with x variable
 630:	21 96       	adiw	r28, 0x01	; 1
 632:	4c 16       	cp	r4, r28
 634:	5d 06       	cpc	r5, r29
 636:	cc f6       	brge	.-78     	; 0x5ea <GLCD_Circle+0xd2>
			y = y1 + (unsigned char)s;
			GLCD_Dot(x,y);
			y = y1 - (unsigned char)s;
			GLCD_Dot(x,y);
		}
	}
 638:	df 91       	pop	r29
 63a:	cf 91       	pop	r28
 63c:	1f 91       	pop	r17
 63e:	0f 91       	pop	r16
 640:	ff 90       	pop	r15
 642:	ef 90       	pop	r14
 644:	df 90       	pop	r13
 646:	cf 90       	pop	r12
 648:	bf 90       	pop	r11
 64a:	af 90       	pop	r10
 64c:	9f 90       	pop	r9
 64e:	8f 90       	pop	r8
 650:	7f 90       	pop	r7
 652:	6f 90       	pop	r6
 654:	5f 90       	pop	r5
 656:	4f 90       	pop	r4
 658:	3f 90       	pop	r3
 65a:	2f 90       	pop	r2
 65c:	08 95       	ret

0000065e <__subsf3>:
 65e:	50 58       	subi	r21, 0x80	; 128

00000660 <__addsf3>:
 660:	bb 27       	eor	r27, r27
 662:	aa 27       	eor	r26, r26
 664:	0e d0       	rcall	.+28     	; 0x682 <__addsf3x>
 666:	e0 c0       	rjmp	.+448    	; 0x828 <__fp_round>
 668:	d1 d0       	rcall	.+418    	; 0x80c <__fp_pscA>
 66a:	30 f0       	brcs	.+12     	; 0x678 <__addsf3+0x18>
 66c:	d6 d0       	rcall	.+428    	; 0x81a <__fp_pscB>
 66e:	20 f0       	brcs	.+8      	; 0x678 <__addsf3+0x18>
 670:	31 f4       	brne	.+12     	; 0x67e <__addsf3+0x1e>
 672:	9f 3f       	cpi	r25, 0xFF	; 255
 674:	11 f4       	brne	.+4      	; 0x67a <__addsf3+0x1a>
 676:	1e f4       	brtc	.+6      	; 0x67e <__addsf3+0x1e>
 678:	c6 c0       	rjmp	.+396    	; 0x806 <__fp_nan>
 67a:	0e f4       	brtc	.+2      	; 0x67e <__addsf3+0x1e>
 67c:	e0 95       	com	r30
 67e:	e7 fb       	bst	r30, 7
 680:	bc c0       	rjmp	.+376    	; 0x7fa <__fp_inf>

00000682 <__addsf3x>:
 682:	e9 2f       	mov	r30, r25
 684:	e2 d0       	rcall	.+452    	; 0x84a <__fp_split3>
 686:	80 f3       	brcs	.-32     	; 0x668 <__addsf3+0x8>
 688:	ba 17       	cp	r27, r26
 68a:	62 07       	cpc	r22, r18
 68c:	73 07       	cpc	r23, r19
 68e:	84 07       	cpc	r24, r20
 690:	95 07       	cpc	r25, r21
 692:	18 f0       	brcs	.+6      	; 0x69a <__addsf3x+0x18>
 694:	71 f4       	brne	.+28     	; 0x6b2 <__addsf3x+0x30>
 696:	9e f5       	brtc	.+102    	; 0x6fe <__addsf3x+0x7c>
 698:	fa c0       	rjmp	.+500    	; 0x88e <__fp_zero>
 69a:	0e f4       	brtc	.+2      	; 0x69e <__addsf3x+0x1c>
 69c:	e0 95       	com	r30
 69e:	0b 2e       	mov	r0, r27
 6a0:	ba 2f       	mov	r27, r26
 6a2:	a0 2d       	mov	r26, r0
 6a4:	0b 01       	movw	r0, r22
 6a6:	b9 01       	movw	r22, r18
 6a8:	90 01       	movw	r18, r0
 6aa:	0c 01       	movw	r0, r24
 6ac:	ca 01       	movw	r24, r20
 6ae:	a0 01       	movw	r20, r0
 6b0:	11 24       	eor	r1, r1
 6b2:	ff 27       	eor	r31, r31
 6b4:	59 1b       	sub	r21, r25
 6b6:	99 f0       	breq	.+38     	; 0x6de <__addsf3x+0x5c>
 6b8:	59 3f       	cpi	r21, 0xF9	; 249
 6ba:	50 f4       	brcc	.+20     	; 0x6d0 <__addsf3x+0x4e>
 6bc:	50 3e       	cpi	r21, 0xE0	; 224
 6be:	68 f1       	brcs	.+90     	; 0x71a <__addsf3x+0x98>
 6c0:	1a 16       	cp	r1, r26
 6c2:	f0 40       	sbci	r31, 0x00	; 0
 6c4:	a2 2f       	mov	r26, r18
 6c6:	23 2f       	mov	r18, r19
 6c8:	34 2f       	mov	r19, r20
 6ca:	44 27       	eor	r20, r20
 6cc:	58 5f       	subi	r21, 0xF8	; 248
 6ce:	f3 cf       	rjmp	.-26     	; 0x6b6 <__addsf3x+0x34>
 6d0:	46 95       	lsr	r20
 6d2:	37 95       	ror	r19
 6d4:	27 95       	ror	r18
 6d6:	a7 95       	ror	r26
 6d8:	f0 40       	sbci	r31, 0x00	; 0
 6da:	53 95       	inc	r21
 6dc:	c9 f7       	brne	.-14     	; 0x6d0 <__addsf3x+0x4e>
 6de:	7e f4       	brtc	.+30     	; 0x6fe <__addsf3x+0x7c>
 6e0:	1f 16       	cp	r1, r31
 6e2:	ba 0b       	sbc	r27, r26
 6e4:	62 0b       	sbc	r22, r18
 6e6:	73 0b       	sbc	r23, r19
 6e8:	84 0b       	sbc	r24, r20
 6ea:	ba f0       	brmi	.+46     	; 0x71a <__addsf3x+0x98>
 6ec:	91 50       	subi	r25, 0x01	; 1
 6ee:	a1 f0       	breq	.+40     	; 0x718 <__addsf3x+0x96>
 6f0:	ff 0f       	add	r31, r31
 6f2:	bb 1f       	adc	r27, r27
 6f4:	66 1f       	adc	r22, r22
 6f6:	77 1f       	adc	r23, r23
 6f8:	88 1f       	adc	r24, r24
 6fa:	c2 f7       	brpl	.-16     	; 0x6ec <__addsf3x+0x6a>
 6fc:	0e c0       	rjmp	.+28     	; 0x71a <__addsf3x+0x98>
 6fe:	ba 0f       	add	r27, r26
 700:	62 1f       	adc	r22, r18
 702:	73 1f       	adc	r23, r19
 704:	84 1f       	adc	r24, r20
 706:	48 f4       	brcc	.+18     	; 0x71a <__addsf3x+0x98>
 708:	87 95       	ror	r24
 70a:	77 95       	ror	r23
 70c:	67 95       	ror	r22
 70e:	b7 95       	ror	r27
 710:	f7 95       	ror	r31
 712:	9e 3f       	cpi	r25, 0xFE	; 254
 714:	08 f0       	brcs	.+2      	; 0x718 <__addsf3x+0x96>
 716:	b3 cf       	rjmp	.-154    	; 0x67e <__addsf3+0x1e>
 718:	93 95       	inc	r25
 71a:	88 0f       	add	r24, r24
 71c:	08 f0       	brcs	.+2      	; 0x720 <__addsf3x+0x9e>
 71e:	99 27       	eor	r25, r25
 720:	ee 0f       	add	r30, r30
 722:	97 95       	ror	r25
 724:	87 95       	ror	r24
 726:	08 95       	ret

00000728 <__fixunssfsi>:
 728:	98 d0       	rcall	.+304    	; 0x85a <__fp_splitA>
 72a:	88 f0       	brcs	.+34     	; 0x74e <__fixunssfsi+0x26>
 72c:	9f 57       	subi	r25, 0x7F	; 127
 72e:	90 f0       	brcs	.+36     	; 0x754 <__fixunssfsi+0x2c>
 730:	b9 2f       	mov	r27, r25
 732:	99 27       	eor	r25, r25
 734:	b7 51       	subi	r27, 0x17	; 23
 736:	a0 f0       	brcs	.+40     	; 0x760 <__fixunssfsi+0x38>
 738:	d1 f0       	breq	.+52     	; 0x76e <__fixunssfsi+0x46>
 73a:	66 0f       	add	r22, r22
 73c:	77 1f       	adc	r23, r23
 73e:	88 1f       	adc	r24, r24
 740:	99 1f       	adc	r25, r25
 742:	1a f0       	brmi	.+6      	; 0x74a <__fixunssfsi+0x22>
 744:	ba 95       	dec	r27
 746:	c9 f7       	brne	.-14     	; 0x73a <__fixunssfsi+0x12>
 748:	12 c0       	rjmp	.+36     	; 0x76e <__fixunssfsi+0x46>
 74a:	b1 30       	cpi	r27, 0x01	; 1
 74c:	81 f0       	breq	.+32     	; 0x76e <__fixunssfsi+0x46>
 74e:	9f d0       	rcall	.+318    	; 0x88e <__fp_zero>
 750:	b1 e0       	ldi	r27, 0x01	; 1
 752:	08 95       	ret
 754:	9c c0       	rjmp	.+312    	; 0x88e <__fp_zero>
 756:	67 2f       	mov	r22, r23
 758:	78 2f       	mov	r23, r24
 75a:	88 27       	eor	r24, r24
 75c:	b8 5f       	subi	r27, 0xF8	; 248
 75e:	39 f0       	breq	.+14     	; 0x76e <__fixunssfsi+0x46>
 760:	b9 3f       	cpi	r27, 0xF9	; 249
 762:	cc f3       	brlt	.-14     	; 0x756 <__fixunssfsi+0x2e>
 764:	86 95       	lsr	r24
 766:	77 95       	ror	r23
 768:	67 95       	ror	r22
 76a:	b3 95       	inc	r27
 76c:	d9 f7       	brne	.-10     	; 0x764 <__fixunssfsi+0x3c>
 76e:	3e f4       	brtc	.+14     	; 0x77e <__fixunssfsi+0x56>
 770:	90 95       	com	r25
 772:	80 95       	com	r24
 774:	70 95       	com	r23
 776:	61 95       	neg	r22
 778:	7f 4f       	sbci	r23, 0xFF	; 255
 77a:	8f 4f       	sbci	r24, 0xFF	; 255
 77c:	9f 4f       	sbci	r25, 0xFF	; 255
 77e:	08 95       	ret

00000780 <__floatunsisf>:
 780:	e8 94       	clt
 782:	09 c0       	rjmp	.+18     	; 0x796 <__floatsisf+0x12>

00000784 <__floatsisf>:
 784:	97 fb       	bst	r25, 7
 786:	3e f4       	brtc	.+14     	; 0x796 <__floatsisf+0x12>
 788:	90 95       	com	r25
 78a:	80 95       	com	r24
 78c:	70 95       	com	r23
 78e:	61 95       	neg	r22
 790:	7f 4f       	sbci	r23, 0xFF	; 255
 792:	8f 4f       	sbci	r24, 0xFF	; 255
 794:	9f 4f       	sbci	r25, 0xFF	; 255
 796:	99 23       	and	r25, r25
 798:	a9 f0       	breq	.+42     	; 0x7c4 <__floatsisf+0x40>
 79a:	f9 2f       	mov	r31, r25
 79c:	96 e9       	ldi	r25, 0x96	; 150
 79e:	bb 27       	eor	r27, r27
 7a0:	93 95       	inc	r25
 7a2:	f6 95       	lsr	r31
 7a4:	87 95       	ror	r24
 7a6:	77 95       	ror	r23
 7a8:	67 95       	ror	r22
 7aa:	b7 95       	ror	r27
 7ac:	f1 11       	cpse	r31, r1
 7ae:	f8 cf       	rjmp	.-16     	; 0x7a0 <__floatsisf+0x1c>
 7b0:	fa f4       	brpl	.+62     	; 0x7f0 <__floatsisf+0x6c>
 7b2:	bb 0f       	add	r27, r27
 7b4:	11 f4       	brne	.+4      	; 0x7ba <__floatsisf+0x36>
 7b6:	60 ff       	sbrs	r22, 0
 7b8:	1b c0       	rjmp	.+54     	; 0x7f0 <__floatsisf+0x6c>
 7ba:	6f 5f       	subi	r22, 0xFF	; 255
 7bc:	7f 4f       	sbci	r23, 0xFF	; 255
 7be:	8f 4f       	sbci	r24, 0xFF	; 255
 7c0:	9f 4f       	sbci	r25, 0xFF	; 255
 7c2:	16 c0       	rjmp	.+44     	; 0x7f0 <__floatsisf+0x6c>
 7c4:	88 23       	and	r24, r24
 7c6:	11 f0       	breq	.+4      	; 0x7cc <__floatsisf+0x48>
 7c8:	96 e9       	ldi	r25, 0x96	; 150
 7ca:	11 c0       	rjmp	.+34     	; 0x7ee <__floatsisf+0x6a>
 7cc:	77 23       	and	r23, r23
 7ce:	21 f0       	breq	.+8      	; 0x7d8 <__floatsisf+0x54>
 7d0:	9e e8       	ldi	r25, 0x8E	; 142
 7d2:	87 2f       	mov	r24, r23
 7d4:	76 2f       	mov	r23, r22
 7d6:	05 c0       	rjmp	.+10     	; 0x7e2 <__floatsisf+0x5e>
 7d8:	66 23       	and	r22, r22
 7da:	71 f0       	breq	.+28     	; 0x7f8 <__floatsisf+0x74>
 7dc:	96 e8       	ldi	r25, 0x86	; 134
 7de:	86 2f       	mov	r24, r22
 7e0:	70 e0       	ldi	r23, 0x00	; 0
 7e2:	60 e0       	ldi	r22, 0x00	; 0
 7e4:	2a f0       	brmi	.+10     	; 0x7f0 <__floatsisf+0x6c>
 7e6:	9a 95       	dec	r25
 7e8:	66 0f       	add	r22, r22
 7ea:	77 1f       	adc	r23, r23
 7ec:	88 1f       	adc	r24, r24
 7ee:	da f7       	brpl	.-10     	; 0x7e6 <__floatsisf+0x62>
 7f0:	88 0f       	add	r24, r24
 7f2:	96 95       	lsr	r25
 7f4:	87 95       	ror	r24
 7f6:	97 f9       	bld	r25, 7
 7f8:	08 95       	ret

000007fa <__fp_inf>:
 7fa:	97 f9       	bld	r25, 7
 7fc:	9f 67       	ori	r25, 0x7F	; 127
 7fe:	80 e8       	ldi	r24, 0x80	; 128
 800:	70 e0       	ldi	r23, 0x00	; 0
 802:	60 e0       	ldi	r22, 0x00	; 0
 804:	08 95       	ret

00000806 <__fp_nan>:
 806:	9f ef       	ldi	r25, 0xFF	; 255
 808:	80 ec       	ldi	r24, 0xC0	; 192
 80a:	08 95       	ret

0000080c <__fp_pscA>:
 80c:	00 24       	eor	r0, r0
 80e:	0a 94       	dec	r0
 810:	16 16       	cp	r1, r22
 812:	17 06       	cpc	r1, r23
 814:	18 06       	cpc	r1, r24
 816:	09 06       	cpc	r0, r25
 818:	08 95       	ret

0000081a <__fp_pscB>:
 81a:	00 24       	eor	r0, r0
 81c:	0a 94       	dec	r0
 81e:	12 16       	cp	r1, r18
 820:	13 06       	cpc	r1, r19
 822:	14 06       	cpc	r1, r20
 824:	05 06       	cpc	r0, r21
 826:	08 95       	ret

00000828 <__fp_round>:
 828:	09 2e       	mov	r0, r25
 82a:	03 94       	inc	r0
 82c:	00 0c       	add	r0, r0
 82e:	11 f4       	brne	.+4      	; 0x834 <__fp_round+0xc>
 830:	88 23       	and	r24, r24
 832:	52 f0       	brmi	.+20     	; 0x848 <__fp_round+0x20>
 834:	bb 0f       	add	r27, r27
 836:	40 f4       	brcc	.+16     	; 0x848 <__fp_round+0x20>
 838:	bf 2b       	or	r27, r31
 83a:	11 f4       	brne	.+4      	; 0x840 <__fp_round+0x18>
 83c:	60 ff       	sbrs	r22, 0
 83e:	04 c0       	rjmp	.+8      	; 0x848 <__fp_round+0x20>
 840:	6f 5f       	subi	r22, 0xFF	; 255
 842:	7f 4f       	sbci	r23, 0xFF	; 255
 844:	8f 4f       	sbci	r24, 0xFF	; 255
 846:	9f 4f       	sbci	r25, 0xFF	; 255
 848:	08 95       	ret

0000084a <__fp_split3>:
 84a:	57 fd       	sbrc	r21, 7
 84c:	90 58       	subi	r25, 0x80	; 128
 84e:	44 0f       	add	r20, r20
 850:	55 1f       	adc	r21, r21
 852:	59 f0       	breq	.+22     	; 0x86a <__fp_splitA+0x10>
 854:	5f 3f       	cpi	r21, 0xFF	; 255
 856:	71 f0       	breq	.+28     	; 0x874 <__fp_splitA+0x1a>
 858:	47 95       	ror	r20

0000085a <__fp_splitA>:
 85a:	88 0f       	add	r24, r24
 85c:	97 fb       	bst	r25, 7
 85e:	99 1f       	adc	r25, r25
 860:	61 f0       	breq	.+24     	; 0x87a <__fp_splitA+0x20>
 862:	9f 3f       	cpi	r25, 0xFF	; 255
 864:	79 f0       	breq	.+30     	; 0x884 <__fp_splitA+0x2a>
 866:	87 95       	ror	r24
 868:	08 95       	ret
 86a:	12 16       	cp	r1, r18
 86c:	13 06       	cpc	r1, r19
 86e:	14 06       	cpc	r1, r20
 870:	55 1f       	adc	r21, r21
 872:	f2 cf       	rjmp	.-28     	; 0x858 <__fp_split3+0xe>
 874:	46 95       	lsr	r20
 876:	f1 df       	rcall	.-30     	; 0x85a <__fp_splitA>
 878:	08 c0       	rjmp	.+16     	; 0x88a <__fp_splitA+0x30>
 87a:	16 16       	cp	r1, r22
 87c:	17 06       	cpc	r1, r23
 87e:	18 06       	cpc	r1, r24
 880:	99 1f       	adc	r25, r25
 882:	f1 cf       	rjmp	.-30     	; 0x866 <__fp_splitA+0xc>
 884:	86 95       	lsr	r24
 886:	71 05       	cpc	r23, r1
 888:	61 05       	cpc	r22, r1
 88a:	08 94       	sec
 88c:	08 95       	ret

0000088e <__fp_zero>:
 88e:	e8 94       	clt

00000890 <__fp_szero>:
 890:	bb 27       	eor	r27, r27
 892:	66 27       	eor	r22, r22
 894:	77 27       	eor	r23, r23
 896:	cb 01       	movw	r24, r22
 898:	97 f9       	bld	r25, 7
 89a:	08 95       	ret
 89c:	11 f4       	brne	.+4      	; 0x8a2 <__fp_szero+0x12>
 89e:	0e f4       	brtc	.+2      	; 0x8a2 <__fp_szero+0x12>
 8a0:	b2 cf       	rjmp	.-156    	; 0x806 <__fp_nan>
 8a2:	3e c0       	rjmp	.+124    	; 0x920 <__fp_mpack>

000008a4 <sqrt>:
 8a4:	da df       	rcall	.-76     	; 0x85a <__fp_splitA>
 8a6:	d0 f3       	brcs	.-12     	; 0x89c <__fp_szero+0xc>
 8a8:	99 23       	and	r25, r25
 8aa:	d9 f3       	breq	.-10     	; 0x8a2 <__fp_szero+0x12>
 8ac:	ce f3       	brts	.-14     	; 0x8a0 <__fp_szero+0x10>
 8ae:	9f 57       	subi	r25, 0x7F	; 127
 8b0:	55 0b       	sbc	r21, r21
 8b2:	87 ff       	sbrs	r24, 7
 8b4:	43 d0       	rcall	.+134    	; 0x93c <__fp_norm2>
 8b6:	00 24       	eor	r0, r0
 8b8:	a0 e6       	ldi	r26, 0x60	; 96
 8ba:	40 ea       	ldi	r20, 0xA0	; 160
 8bc:	90 01       	movw	r18, r0
 8be:	80 58       	subi	r24, 0x80	; 128
 8c0:	56 95       	lsr	r21
 8c2:	97 95       	ror	r25
 8c4:	28 f4       	brcc	.+10     	; 0x8d0 <sqrt+0x2c>
 8c6:	80 5c       	subi	r24, 0xC0	; 192
 8c8:	66 0f       	add	r22, r22
 8ca:	77 1f       	adc	r23, r23
 8cc:	88 1f       	adc	r24, r24
 8ce:	20 f0       	brcs	.+8      	; 0x8d8 <sqrt+0x34>
 8d0:	26 17       	cp	r18, r22
 8d2:	37 07       	cpc	r19, r23
 8d4:	48 07       	cpc	r20, r24
 8d6:	30 f4       	brcc	.+12     	; 0x8e4 <sqrt+0x40>
 8d8:	62 1b       	sub	r22, r18
 8da:	73 0b       	sbc	r23, r19
 8dc:	84 0b       	sbc	r24, r20
 8de:	20 29       	or	r18, r0
 8e0:	31 29       	or	r19, r1
 8e2:	4a 2b       	or	r20, r26
 8e4:	a6 95       	lsr	r26
 8e6:	17 94       	ror	r1
 8e8:	07 94       	ror	r0
 8ea:	20 25       	eor	r18, r0
 8ec:	31 25       	eor	r19, r1
 8ee:	4a 27       	eor	r20, r26
 8f0:	58 f7       	brcc	.-42     	; 0x8c8 <sqrt+0x24>
 8f2:	66 0f       	add	r22, r22
 8f4:	77 1f       	adc	r23, r23
 8f6:	88 1f       	adc	r24, r24
 8f8:	20 f0       	brcs	.+8      	; 0x902 <sqrt+0x5e>
 8fa:	26 17       	cp	r18, r22
 8fc:	37 07       	cpc	r19, r23
 8fe:	48 07       	cpc	r20, r24
 900:	30 f4       	brcc	.+12     	; 0x90e <sqrt+0x6a>
 902:	62 0b       	sbc	r22, r18
 904:	73 0b       	sbc	r23, r19
 906:	84 0b       	sbc	r24, r20
 908:	20 0d       	add	r18, r0
 90a:	31 1d       	adc	r19, r1
 90c:	41 1d       	adc	r20, r1
 90e:	a0 95       	com	r26
 910:	81 f7       	brne	.-32     	; 0x8f2 <sqrt+0x4e>
 912:	b9 01       	movw	r22, r18
 914:	84 2f       	mov	r24, r20
 916:	91 58       	subi	r25, 0x81	; 129
 918:	88 0f       	add	r24, r24
 91a:	96 95       	lsr	r25
 91c:	87 95       	ror	r24
 91e:	08 95       	ret

00000920 <__fp_mpack>:
 920:	9f 3f       	cpi	r25, 0xFF	; 255
 922:	31 f0       	breq	.+12     	; 0x930 <__fp_mpack_finite+0xc>

00000924 <__fp_mpack_finite>:
 924:	91 50       	subi	r25, 0x01	; 1
 926:	20 f4       	brcc	.+8      	; 0x930 <__fp_mpack_finite+0xc>
 928:	87 95       	ror	r24
 92a:	77 95       	ror	r23
 92c:	67 95       	ror	r22
 92e:	b7 95       	ror	r27
 930:	88 0f       	add	r24, r24
 932:	91 1d       	adc	r25, r1
 934:	96 95       	lsr	r25
 936:	87 95       	ror	r24
 938:	97 f9       	bld	r25, 7
 93a:	08 95       	ret

0000093c <__fp_norm2>:
 93c:	91 50       	subi	r25, 0x01	; 1
 93e:	50 40       	sbci	r21, 0x00	; 0
 940:	66 0f       	add	r22, r22
 942:	77 1f       	adc	r23, r23
 944:	88 1f       	adc	r24, r24
 946:	d2 f7       	brpl	.-12     	; 0x93c <__fp_norm2>
 948:	08 95       	ret

0000094a <__udivmodhi4>:
 94a:	aa 1b       	sub	r26, r26
 94c:	bb 1b       	sub	r27, r27
 94e:	51 e1       	ldi	r21, 0x11	; 17
 950:	07 c0       	rjmp	.+14     	; 0x960 <__udivmodhi4_ep>

00000952 <__udivmodhi4_loop>:
 952:	aa 1f       	adc	r26, r26
 954:	bb 1f       	adc	r27, r27
 956:	a6 17       	cp	r26, r22
 958:	b7 07       	cpc	r27, r23
 95a:	10 f0       	brcs	.+4      	; 0x960 <__udivmodhi4_ep>
 95c:	a6 1b       	sub	r26, r22
 95e:	b7 0b       	sbc	r27, r23

00000960 <__udivmodhi4_ep>:
 960:	88 1f       	adc	r24, r24
 962:	99 1f       	adc	r25, r25
 964:	5a 95       	dec	r21
 966:	a9 f7       	brne	.-22     	; 0x952 <__udivmodhi4_loop>
 968:	80 95       	com	r24
 96a:	90 95       	com	r25
 96c:	bc 01       	movw	r22, r24
 96e:	cd 01       	movw	r24, r26
 970:	08 95       	ret

00000972 <__divmodhi4>:
 972:	97 fb       	bst	r25, 7
 974:	07 2e       	mov	r0, r23
 976:	16 f4       	brtc	.+4      	; 0x97c <__divmodhi4+0xa>
 978:	00 94       	com	r0
 97a:	06 d0       	rcall	.+12     	; 0x988 <__divmodhi4_neg1>
 97c:	77 fd       	sbrc	r23, 7
 97e:	08 d0       	rcall	.+16     	; 0x990 <__divmodhi4_neg2>
 980:	e4 df       	rcall	.-56     	; 0x94a <__udivmodhi4>
 982:	07 fc       	sbrc	r0, 7
 984:	05 d0       	rcall	.+10     	; 0x990 <__divmodhi4_neg2>
 986:	3e f4       	brtc	.+14     	; 0x996 <__divmodhi4_exit>

00000988 <__divmodhi4_neg1>:
 988:	90 95       	com	r25
 98a:	81 95       	neg	r24
 98c:	9f 4f       	sbci	r25, 0xFF	; 255
 98e:	08 95       	ret

00000990 <__divmodhi4_neg2>:
 990:	70 95       	com	r23
 992:	61 95       	neg	r22
 994:	7f 4f       	sbci	r23, 0xFF	; 255

00000996 <__divmodhi4_exit>:
 996:	08 95       	ret

00000998 <_exit>:
 998:	f8 94       	cli

0000099a <__stop_program>:
 99a:	ff cf       	rjmp	.-2      	; 0x99a <__stop_program>
